// Code generated by Kitex v0.14.1. DO NOT EDIT.

package model

import (
	"github.com/xh-polaris/psych-idl/kitex_gen/basic"

	"github.com/cloudwego/prutal"
)

type UnitAppConfig struct {
	Id         string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UnitId     string            `protobuf:"bytes,2,opt,name=unitId" json:"unitId,omitempty"`
	Name       string            `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Video      string            `protobuf:"bytes,4,opt,name=video" json:"video,omitempty"`
	Chat       string            `protobuf:"bytes,5,opt,name=chat" json:"chat,omitempty"`
	Asr        string            `protobuf:"bytes,6,opt,name=asr" json:"asr,omitempty"`
	Tts        string            `protobuf:"bytes,7,opt,name=tts" json:"tts,omitempty"`
	Report     string            `protobuf:"bytes,8,opt,name=report" json:"report,omitempty"`
	Option     map[string]string `protobuf:"bytes,9,rep,name=option" json:"option,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status     int32             `protobuf:"varint,10,opt,name=status" json:"status,omitempty"`
	CreateTime int64             `protobuf:"varint,11,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime int64             `protobuf:"varint,12,opt,name=updateTime" json:"updateTime,omitempty"`
}

func (x *UnitAppConfig) Reset() { *x = UnitAppConfig{} }

func (x *UnitAppConfig) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitAppConfig) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitAppConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitAppConfig) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *UnitAppConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnitAppConfig) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *UnitAppConfig) GetChat() string {
	if x != nil {
		return x.Chat
	}
	return ""
}

func (x *UnitAppConfig) GetAsr() string {
	if x != nil {
		return x.Asr
	}
	return ""
}

func (x *UnitAppConfig) GetTts() string {
	if x != nil {
		return x.Tts
	}
	return ""
}

func (x *UnitAppConfig) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

func (x *UnitAppConfig) GetOption() map[string]string {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *UnitAppConfig) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UnitAppConfig) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UnitAppConfig) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type App struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Lang        string `protobuf:"bytes,4,opt,name=lang" json:"lang,omitempty"`
	Platform    string `protobuf:"bytes,5,opt,name=platform" json:"platform,omitempty"`
	Url         string `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	AppId       string `protobuf:"bytes,7,opt,name=appId" json:"appId,omitempty"`
	AccessKey   string `protobuf:"bytes,8,opt,name=accessKey" json:"accessKey,omitempty"`
	Stream      bool   `protobuf:"varint,9,opt,name=stream" json:"stream,omitempty"`
	Level       int32  `protobuf:"varint,10,opt,name=level" json:"level,omitempty"`
	Status      int32  `protobuf:"varint,11,opt,name=status" json:"status,omitempty"`
	CreateTime  int64  `protobuf:"varint,13,opt,name=createTime" json:"createTime,omitempty"`
	ExpireTime  int64  `protobuf:"varint,14,opt,name=expireTime" json:"expireTime,omitempty"`
	UpdateTime  int64  `protobuf:"varint,15,opt,name=updateTime" json:"updateTime,omitempty"`
	DeleteTime  int64  `protobuf:"varint,16,opt,name=deleteTime" json:"deleteTime,omitempty"`
}

func (x *App) Reset() { *x = App{} }

func (x *App) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *App) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *App) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *App) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *App) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *App) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *App) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *App) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *App) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *App) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *App) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *App) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *App) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *App) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *App) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

type AppData struct {
	Type int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	// Types that are assignable to App:
	//
	//	*AppData_ChatApp
	//	*AppData_TtsApp
	//	*AppData_AsrApp
	//	*AppData_ReportApp
	App isAppData_App `protobuf_oneof:"app"`
}

func (x *AppData) Reset() { *x = AppData{} }

func (x *AppData) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppData) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AppData) GetApp() isAppData_App {
	if x != nil {
		return x.App
	}
	return nil
}
func (x *AppData) GetChatApp() *ChatApp {
	if p, ok := x.GetApp().(*AppData_ChatApp); ok {
		return p.ChatApp
	}
	return nil
}

func (x *AppData) GetTtsApp() *TtsApp {
	if p, ok := x.GetApp().(*AppData_TtsApp); ok {
		return p.TtsApp
	}
	return nil
}

func (x *AppData) GetAsrApp() *AsrApp {
	if p, ok := x.GetApp().(*AppData_AsrApp); ok {
		return p.AsrApp
	}
	return nil
}

func (x *AppData) GetReportApp() *ReportApp {
	if p, ok := x.GetApp().(*AppData_ReportApp); ok {
		return p.ReportApp
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the prutal package.
func (*AppData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AppData_ChatApp)(nil),
		(*AppData_TtsApp)(nil),
		(*AppData_AsrApp)(nil),
		(*AppData_ReportApp)(nil),
	}
}

type isAppData_App interface {
	isAppData_App()
}

type AppData_ChatApp struct {
	ChatApp *ChatApp `protobuf:"bytes,2,opt,name=chatApp" json:"chatApp,omitempty"`
}

func (*AppData_ChatApp) isAppData_App() {}

type AppData_TtsApp struct {
	TtsApp *TtsApp `protobuf:"bytes,3,opt,name=ttsApp" json:"ttsApp,omitempty"`
}

func (*AppData_TtsApp) isAppData_App() {}

type AppData_AsrApp struct {
	AsrApp *AsrApp `protobuf:"bytes,4,opt,name=asrApp" json:"asrApp,omitempty"`
}

func (*AppData_AsrApp) isAppData_App() {}

type AppData_ReportApp struct {
	ReportApp *ReportApp `protobuf:"bytes,5,opt,name=reportApp" json:"reportApp,omitempty"`
}

func (*AppData_ReportApp) isAppData_App() {}

type ChatApp struct {
	App *App `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (x *ChatApp) Reset() { *x = ChatApp{} }

func (x *ChatApp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *ChatApp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *ChatApp) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

type TtsApp struct {
	App         *App               `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Namespace   string             `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Speaker     string             `protobuf:"bytes,3,opt,name=speaker" json:"speaker,omitempty"`
	ResourceId  string             `protobuf:"bytes,4,opt,name=resourceId" json:"resourceId,omitempty"`
	AudioParams *TtsApp_AudioParam `protobuf:"bytes,5,opt,name=audioParams" json:"audioParams,omitempty"`
}

func (x *TtsApp) Reset() { *x = TtsApp{} }

func (x *TtsApp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *TtsApp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *TtsApp) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *TtsApp) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TtsApp) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

func (x *TtsApp) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *TtsApp) GetAudioParams() *TtsApp_AudioParam {
	if x != nil {
		return x.AudioParams
	}
	return nil
}

type TtsApp_AudioParam struct {
	Format       string `protobuf:"bytes,1,opt,name=format" json:"format,omitempty"`
	Rate         int32  `protobuf:"varint,2,opt,name=rate" json:"rate,omitempty"`
	Bit          int32  `protobuf:"varint,3,opt,name=bit" json:"bit,omitempty"`
	SpeechRate   int32  `protobuf:"varint,4,opt,name=speechRate" json:"speechRate,omitempty"`
	LoudnessRate int32  `protobuf:"varint,5,opt,name=loudnessRate" json:"loudnessRate,omitempty"`
	Lang         string `protobuf:"bytes,6,opt,name=lang" json:"lang,omitempty"`
}

func (x *TtsApp_AudioParam) Reset() { *x = TtsApp_AudioParam{} }

func (x *TtsApp_AudioParam) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *TtsApp_AudioParam) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *TtsApp_AudioParam) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *TtsApp_AudioParam) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *TtsApp_AudioParam) GetBit() int32 {
	if x != nil {
		return x.Bit
	}
	return 0
}

func (x *TtsApp_AudioParam) GetSpeechRate() int32 {
	if x != nil {
		return x.SpeechRate
	}
	return 0
}

func (x *TtsApp_AudioParam) GetLoudnessRate() int32 {
	if x != nil {
		return x.LoudnessRate
	}
	return 0
}

func (x *TtsApp_AudioParam) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type AsrApp struct {
	App        *App   `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Format     string `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	Codec      string `protobuf:"bytes,3,opt,name=codec" json:"codec,omitempty"`
	Rate       int32  `protobuf:"varint,4,opt,name=rate" json:"rate,omitempty"`
	Bits       int32  `protobuf:"varint,5,opt,name=bits" json:"bits,omitempty"`
	Channels   int32  `protobuf:"varint,6,opt,name=channels" json:"channels,omitempty"`
	ModelName  string `protobuf:"bytes,7,opt,name=modelName" json:"modelName,omitempty"`
	EnablePunc bool   `protobuf:"varint,8,opt,name=enablePunc" json:"enablePunc,omitempty"`
	EnableDdc  bool   `protobuf:"varint,9,opt,name=enableDdc" json:"enableDdc,omitempty"`
	ResultType string `protobuf:"bytes,10,opt,name=resultType" json:"resultType,omitempty"`
}

func (x *AsrApp) Reset() { *x = AsrApp{} }

func (x *AsrApp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AsrApp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AsrApp) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *AsrApp) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *AsrApp) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *AsrApp) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *AsrApp) GetBits() int32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *AsrApp) GetChannels() int32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

func (x *AsrApp) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *AsrApp) GetEnablePunc() bool {
	if x != nil {
		return x.EnablePunc
	}
	return false
}

func (x *AsrApp) GetEnableDdc() bool {
	if x != nil {
		return x.EnableDdc
	}
	return false
}

func (x *AsrApp) GetResultType() string {
	if x != nil {
		return x.ResultType
	}
	return ""
}

type ReportApp struct {
	App *App `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (x *ReportApp) Reset() { *x = ReportApp{} }

func (x *ReportApp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *ReportApp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *ReportApp) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

type UnitAppConfigCreateReq struct {
	UnitAppConfig *UnitAppConfig `protobuf:"bytes,1,opt,name=unitAppConfig" json:"unitAppConfig,omitempty"`
	Admin         bool           `protobuf:"varint,2,opt,name=admin" json:"admin,omitempty"`
}

func (x *UnitAppConfigCreateReq) Reset() { *x = UnitAppConfigCreateReq{} }

func (x *UnitAppConfigCreateReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitAppConfigCreateReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitAppConfigCreateReq) GetUnitAppConfig() *UnitAppConfig {
	if x != nil {
		return x.UnitAppConfig
	}
	return nil
}

func (x *UnitAppConfigCreateReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type UnitAppConfigCreateResp struct {
	UnitAppConfig *UnitAppConfig `protobuf:"bytes,1,opt,name=unitAppConfig" json:"unitAppConfig,omitempty"`
}

func (x *UnitAppConfigCreateResp) Reset() { *x = UnitAppConfigCreateResp{} }

func (x *UnitAppConfigCreateResp) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitAppConfigCreateResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitAppConfigCreateResp) GetUnitAppConfig() *UnitAppConfig {
	if x != nil {
		return x.UnitAppConfig
	}
	return nil
}

type UnitAppConfigUpdateReq struct {
	UnitAppConfig *UnitAppConfig `protobuf:"bytes,1,opt,name=unitAppConfig" json:"unitAppConfig,omitempty"`
	Admin         bool           `protobuf:"varint,2,opt,name=admin" json:"admin,omitempty"`
}

func (x *UnitAppConfigUpdateReq) Reset() { *x = UnitAppConfigUpdateReq{} }

func (x *UnitAppConfigUpdateReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitAppConfigUpdateReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitAppConfigUpdateReq) GetUnitAppConfig() *UnitAppConfig {
	if x != nil {
		return x.UnitAppConfig
	}
	return nil
}

func (x *UnitAppConfigUpdateReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type UnitAppConfigGetByIdReq struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Admin bool   `protobuf:"varint,2,opt,name=admin" json:"admin,omitempty"`
}

func (x *UnitAppConfigGetByIdReq) Reset() { *x = UnitAppConfigGetByIdReq{} }

func (x *UnitAppConfigGetByIdReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitAppConfigGetByIdReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitAppConfigGetByIdReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitAppConfigGetByIdReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type UnitAppConfigGetByIdResp struct {
	UnitAppConfig *UnitAppConfig `protobuf:"bytes,1,opt,name=unitAppConfig" json:"unitAppConfig,omitempty"`
	Apps          []*AppData     `protobuf:"bytes,2,rep,name=apps" json:"apps,omitempty"`
}

func (x *UnitAppConfigGetByIdResp) Reset() { *x = UnitAppConfigGetByIdResp{} }

func (x *UnitAppConfigGetByIdResp) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitAppConfigGetByIdResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitAppConfigGetByIdResp) GetUnitAppConfig() *UnitAppConfig {
	if x != nil {
		return x.UnitAppConfig
	}
	return nil
}

func (x *UnitAppConfigGetByIdResp) GetApps() []*AppData {
	if x != nil {
		return x.Apps
	}
	return nil
}

type UnitAppConfigGetByUnitIdReq struct {
	UnitId string `protobuf:"bytes,1,opt,name=unitId" json:"unitId,omitempty"`
	Admin  bool   `protobuf:"varint,2,opt,name=admin" json:"admin,omitempty"`
}

func (x *UnitAppConfigGetByUnitIdReq) Reset() { *x = UnitAppConfigGetByUnitIdReq{} }

func (x *UnitAppConfigGetByUnitIdReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitAppConfigGetByUnitIdReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitAppConfigGetByUnitIdReq) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *UnitAppConfigGetByUnitIdReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type UnitAppConfigGetByUnitIdResp struct {
	UnitAppConfig *UnitAppConfig `protobuf:"bytes,1,opt,name=unitAppConfig" json:"unitAppConfig,omitempty"`
	Apps          []*AppData     `protobuf:"bytes,2,rep,name=apps" json:"apps,omitempty"`
}

func (x *UnitAppConfigGetByUnitIdResp) Reset() { *x = UnitAppConfigGetByUnitIdResp{} }

func (x *UnitAppConfigGetByUnitIdResp) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitAppConfigGetByUnitIdResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitAppConfigGetByUnitIdResp) GetUnitAppConfig() *UnitAppConfig {
	if x != nil {
		return x.UnitAppConfig
	}
	return nil
}

func (x *UnitAppConfigGetByUnitIdResp) GetApps() []*AppData {
	if x != nil {
		return x.Apps
	}
	return nil
}

type AppCreateReq struct {
	App      *AppData `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	ConfigId string   `protobuf:"bytes,2,opt,name=configId" json:"configId,omitempty"`
}

func (x *AppCreateReq) Reset() { *x = AppCreateReq{} }

func (x *AppCreateReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppCreateReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppCreateReq) GetApp() *AppData {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *AppCreateReq) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

type AppCreateResp struct {
	App *AppData `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (x *AppCreateResp) Reset() { *x = AppCreateResp{} }

func (x *AppCreateResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppCreateResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppCreateResp) GetApp() *AppData {
	if x != nil {
		return x.App
	}
	return nil
}

type AppUpdateReq struct {
	App      *AppData `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	ConfigId string   `protobuf:"bytes,2,opt,name=configId" json:"configId,omitempty"`
}

func (x *AppUpdateReq) Reset() { *x = AppUpdateReq{} }

func (x *AppUpdateReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppUpdateReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppUpdateReq) GetApp() *AppData {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *AppUpdateReq) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

type AppGetByConfigIdReq struct {
	ConfigId string `protobuf:"bytes,1,opt,name=configId" json:"configId,omitempty"`
}

func (x *AppGetByConfigIdReq) Reset() { *x = AppGetByConfigIdReq{} }

func (x *AppGetByConfigIdReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppGetByConfigIdReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppGetByConfigIdReq) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

type AppGetByConfigIdResp struct {
	Apps []*AppData `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
}

func (x *AppGetByConfigIdResp) Reset() { *x = AppGetByConfigIdResp{} }

func (x *AppGetByConfigIdResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppGetByConfigIdResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppGetByConfigIdResp) GetApps() []*AppData {
	if x != nil {
		return x.Apps
	}
	return nil
}

type AppGetByIdReq struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *AppGetByIdReq) Reset() { *x = AppGetByIdReq{} }

func (x *AppGetByIdReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppGetByIdReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppGetByIdReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppGetByIdResp struct {
	App *AppData `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (x *AppGetByIdResp) Reset() { *x = AppGetByIdResp{} }

func (x *AppGetByIdResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppGetByIdResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppGetByIdResp) GetApp() *AppData {
	if x != nil {
		return x.App
	}
	return nil
}

type AppListReq struct {
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,1,opt,name=paginationOptions" json:"paginationOptions,omitempty"`
	Type              int32                    `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
}

func (x *AppListReq) Reset() { *x = AppListReq{} }

func (x *AppListReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppListReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppListReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

func (x *AppListReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type AppListResp struct {
	Apps     []*AppData `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
	Total    int64      `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	Page     int64      `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	PageSize int64      `protobuf:"varint,4,opt,name=pageSize" json:"pageSize,omitempty"`
}

func (x *AppListResp) Reset() { *x = AppListResp{} }

func (x *AppListResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppListResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppListResp) GetApps() []*AppData {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *AppListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AppListResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AppListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type AppDeleteReq struct {
	Type     int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	ConfigId string `protobuf:"bytes,2,opt,name=configId" json:"configId,omitempty"`
}

func (x *AppDeleteReq) Reset() { *x = AppDeleteReq{} }

func (x *AppDeleteReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *AppDeleteReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *AppDeleteReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AppDeleteReq) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}
