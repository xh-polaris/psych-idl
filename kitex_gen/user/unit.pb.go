// Code generated by Kitex v0.13.1. DO NOT EDIT.

package user

import (
	"context"
	"github.com/xh-polaris/psych-idl-gen/kitex_gen/basic"

	"github.com/cloudwego/prutal"
)

/* unit账号注册 */
type UnitSignUpReq struct {
	Unit *Unit `protobuf:"bytes,1,opt,name=unit" json:"unit,omitempty"`
}

func (x *UnitSignUpReq) Reset() { *x = UnitSignUpReq{} }

func (x *UnitSignUpReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitSignUpReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitSignUpReq) GetUnit() *Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

/* 获取用户信息 */
type UnitGetInfoReq struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *UnitGetInfoReq) Reset() { *x = UnitGetInfoReq{} }

func (x *UnitGetInfoReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitGetInfoReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitGetInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnitGetInfoResp struct {
	Unit *Unit `protobuf:"bytes,1,opt,name=unit" json:"unit,omitempty"`
}

func (x *UnitGetInfoResp) Reset() { *x = UnitGetInfoResp{} }

func (x *UnitGetInfoResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitGetInfoResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitGetInfoResp) GetUnit() *Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

/* 修改账号信息 */
type UnitUpdateInfoReq struct {
	Unit *Unit `protobuf:"bytes,1,opt,name=unit" json:"unit,omitempty"`
}

func (x *UnitUpdateInfoReq) Reset() { *x = UnitUpdateInfoReq{} }

func (x *UnitUpdateInfoReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitUpdateInfoReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitUpdateInfoReq) GetUnit() *Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

/* 修改密码 */
type UnitUpdatePasswordReq struct {
	Id          string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OldPassword *string `protobuf:"bytes,2,opt,name=oldPassword" json:"oldPassword,omitempty"`
	NewPassword string  `protobuf:"bytes,3,opt,name=newPassword" json:"newPassword,omitempty"`
	VerifyCode  *string `protobuf:"bytes,4,opt,name=verifyCode" json:"verifyCode,omitempty"`
}

func (x *UnitUpdatePasswordReq) Reset() { *x = UnitUpdatePasswordReq{} }

func (x *UnitUpdatePasswordReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitUpdatePasswordReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitUpdatePasswordReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitUpdatePasswordReq) GetOldPassword() string {
	if x != nil && x.OldPassword != nil {
		return *x.OldPassword
	}
	return ""
}

func (x *UnitUpdatePasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *UnitUpdatePasswordReq) GetVerifyCode() string {
	if x != nil && x.VerifyCode != nil {
		return *x.VerifyCode
	}
	return ""
}

/* 强验证登录 */
type UnitStrongVerifyReq struct {
	Phone      string  `protobuf:"bytes,1,opt,name=phone" json:"phone,omitempty"`
	Password   *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	VerifyCode *string `protobuf:"bytes,3,opt,name=verifyCode" json:"verifyCode,omitempty"`
}

func (x *UnitStrongVerifyReq) Reset() { *x = UnitStrongVerifyReq{} }

func (x *UnitStrongVerifyReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitStrongVerifyReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitStrongVerifyReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UnitStrongVerifyReq) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *UnitStrongVerifyReq) GetVerifyCode() string {
	if x != nil && x.VerifyCode != nil {
		return *x.VerifyCode
	}
	return ""
}

/* 弱验证登录 */
type UnitWeakVerifyReq struct {
	Account  string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (x *UnitWeakVerifyReq) Reset() { *x = UnitWeakVerifyReq{} }

func (x *UnitWeakVerifyReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitWeakVerifyReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitWeakVerifyReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UnitWeakVerifyReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

/* 生成弱验证账号 */
type UnitCreateVerifyReq struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"` // unitId
	Number int32  `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
}

func (x *UnitCreateVerifyReq) Reset() { *x = UnitCreateVerifyReq{} }

func (x *UnitCreateVerifyReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitCreateVerifyReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitCreateVerifyReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitCreateVerifyReq) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type UnitCreateVerifyResp struct {
	WeakAccounts []*UnitCreateVerifyResp_WeakAccount `protobuf:"bytes,1,rep,name=weakAccounts" json:"weakAccounts,omitempty"`
}

func (x *UnitCreateVerifyResp) Reset() { *x = UnitCreateVerifyResp{} }

func (x *UnitCreateVerifyResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitCreateVerifyResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitCreateVerifyResp) GetWeakAccounts() []*UnitCreateVerifyResp_WeakAccount {
	if x != nil {
		return x.WeakAccounts
	}
	return nil
}

type UnitCreateVerifyResp_WeakAccount struct {
	Account  string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (x *UnitCreateVerifyResp_WeakAccount) Reset() { *x = UnitCreateVerifyResp_WeakAccount{} }

func (x *UnitCreateVerifyResp_WeakAccount) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitCreateVerifyResp_WeakAccount) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitCreateVerifyResp_WeakAccount) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UnitCreateVerifyResp_WeakAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

/* 修改verify密码 */
type UnitUpdateVerifyPasswordReq struct {
	Account     string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	OldPassword string `protobuf:"bytes,2,opt,name=oldPassword" json:"oldPassword,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=newPassword" json:"newPassword,omitempty"`
}

func (x *UnitUpdateVerifyPasswordReq) Reset() { *x = UnitUpdateVerifyPasswordReq{} }

func (x *UnitUpdateVerifyPasswordReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitUpdateVerifyPasswordReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitUpdateVerifyPasswordReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UnitUpdateVerifyPasswordReq) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UnitUpdateVerifyPasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

/* 关联user账号 */
type UnitLinkUserReq struct {
	UnitId string `protobuf:"bytes,1,opt,name=unitId" json:"unitId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
}

func (x *UnitLinkUserReq) Reset() { *x = UnitLinkUserReq{} }

func (x *UnitLinkUserReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitLinkUserReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitLinkUserReq) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *UnitLinkUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

/* 关联view账号 */
type UnitLinkViewReq struct {
	UnitId string `protobuf:"bytes,1,opt,name=unitId" json:"unitId,omitempty"`
	ViewId string `protobuf:"bytes,2,opt,name=viewId" json:"viewId,omitempty"`
	Level  int32  `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
}

func (x *UnitLinkViewReq) Reset() { *x = UnitLinkViewReq{} }

func (x *UnitLinkViewReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitLinkViewReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitLinkViewReq) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *UnitLinkViewReq) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *UnitLinkViewReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

/* 获取可用模型 */
type UnitGetAppInfoReq struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *UnitGetAppInfoReq) Reset() { *x = UnitGetAppInfoReq{} }

func (x *UnitGetAppInfoReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitGetAppInfoReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitGetAppInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnitGetAppInfoResp struct {
	AppId []string `protobuf:"bytes,1,rep,name=appId" json:"appId,omitempty"`
}

func (x *UnitGetAppInfoResp) Reset() { *x = UnitGetAppInfoResp{} }

func (x *UnitGetAppInfoResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitGetAppInfoResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitGetAppInfoResp) GetAppId() []string {
	if x != nil {
		return x.AppId
	}
	return nil
}

/* 获取模型配置信息 */
type UnitModelGetInfoReq struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *UnitModelGetInfoReq) Reset() { *x = UnitModelGetInfoReq{} }

func (x *UnitModelGetInfoReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitModelGetInfoReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitModelGetInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnitModelGetInfoResp struct {
	UnitModel *UnitModel `protobuf:"bytes,1,opt,name=unitModel" json:"unitModel,omitempty"`
}

func (x *UnitModelGetInfoResp) Reset() { *x = UnitModelGetInfoResp{} }

func (x *UnitModelGetInfoResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitModelGetInfoResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitModelGetInfoResp) GetUnitModel() *UnitModel {
	if x != nil {
		return x.UnitModel
	}
	return nil
}

/* 修改模型配置 */
type UnitModelUpdateInfoReq struct {
	UnitModel *UnitModel `protobuf:"bytes,1,opt,name=unitModel" json:"unitModel,omitempty"`
}

func (x *UnitModelUpdateInfoReq) Reset() { *x = UnitModelUpdateInfoReq{} }

func (x *UnitModelUpdateInfoReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitModelUpdateInfoReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitModelUpdateInfoReq) GetUnitModel() *UnitModel {
	if x != nil {
		return x.UnitModel
	}
	return nil
}

/* 分页查询所属用户 */
type UnitPageQueryUserReq struct {
	Id                string                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,2,opt,name=paginationOptions" json:"paginationOptions,omitempty"`
}

func (x *UnitPageQueryUserReq) Reset() { *x = UnitPageQueryUserReq{} }

func (x *UnitPageQueryUserReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitPageQueryUserReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitPageQueryUserReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitPageQueryUserReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type UnitPageQueryUserResp struct {
	User []*User `protobuf:"bytes,1,rep,name=user" json:"user,omitempty"`
}

func (x *UnitPageQueryUserResp) Reset() { *x = UnitPageQueryUserResp{} }

func (x *UnitPageQueryUserResp) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitPageQueryUserResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitPageQueryUserResp) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

type UnitPageQueryViewReq struct {
	Id                string                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,2,opt,name=paginationOptions" json:"paginationOptions,omitempty"`
}

func (x *UnitPageQueryViewReq) Reset() { *x = UnitPageQueryViewReq{} }

func (x *UnitPageQueryViewReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *UnitPageQueryViewReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitPageQueryViewReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitPageQueryViewReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type UnitPageQueryViewResp struct {
	View []*View `protobuf:"bytes,1,rep,name=view" json:"view,omitempty"`
}

func (x *UnitPageQueryViewResp) Reset() { *x = UnitPageQueryViewResp{} }

func (x *UnitPageQueryViewResp) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitPageQueryViewResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitPageQueryViewResp) GetView() []*View {
	if x != nil {
		return x.View
	}
	return nil
}

/* 批量创建并关联用户 */
type UnitCreateAndLinkUserReq struct {
	UnitId    string   `protobuf:"bytes,1,opt,name=unitId" json:"unitId,omitempty"`
	UserPhone []string `protobuf:"bytes,2,rep,name=userPhone" json:"userPhone,omitempty"`
}

func (x *UnitCreateAndLinkUserReq) Reset() { *x = UnitCreateAndLinkUserReq{} }

func (x *UnitCreateAndLinkUserReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitCreateAndLinkUserReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitCreateAndLinkUserReq) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *UnitCreateAndLinkUserReq) GetUserPhone() []string {
	if x != nil {
		return x.UserPhone
	}
	return nil
}

type UnitCreateAndLinkViewReq struct {
	UnitId    string   `protobuf:"bytes,1,opt,name=unitId" json:"unitId,omitempty"`
	ViewPhone []string `protobuf:"bytes,2,rep,name=viewPhone" json:"viewPhone,omitempty"`
}

func (x *UnitCreateAndLinkViewReq) Reset() { *x = UnitCreateAndLinkViewReq{} }

func (x *UnitCreateAndLinkViewReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *UnitCreateAndLinkViewReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *UnitCreateAndLinkViewReq) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *UnitCreateAndLinkViewReq) GetViewPhone() []string {
	if x != nil {
		return x.ViewPhone
	}
	return nil
}

type UnitService interface {
	UnitSignUp(ctx context.Context, req *UnitSignUpReq) (res *basic.Response, err error)
	UnitGetInfo(ctx context.Context, req *UnitGetInfoReq) (res *UnitGetInfoResp, err error)
	UnitUpdateInfo(ctx context.Context, req *UnitUpdateInfoReq) (res *basic.Response, err error)
	UnitUpdatePassword(ctx context.Context, req *UnitUpdatePasswordReq) (res *basic.Response, err error)
	UnitCreateAndLinkUser(ctx context.Context, req *UnitCreateAndLinkUserReq) (res *basic.Response, err error)
	UnitCreateAndLinkView(ctx context.Context, req *UnitCreateAndLinkViewReq) (res *basic.Response, err error)
	UnitStrongVerify(ctx context.Context, req *UnitStrongVerifyReq) (res *basic.Response, err error)
	UnitWeakVerify(ctx context.Context, req *UnitWeakVerifyReq) (res *basic.Response, err error)
	UnitCreateVerify(ctx context.Context, req *UnitCreateVerifyReq) (res *UnitCreateVerifyResp, err error)
	UnitUpdateVerifyPassword(ctx context.Context, req *UnitUpdateVerifyPasswordReq) (res *basic.Response, err error)
	UnitLinkUser(ctx context.Context, req *UnitLinkUserReq) (res *basic.Response, err error)
	UnitLinkView(ctx context.Context, req *UnitLinkViewReq) (res *basic.Response, err error)
	UnitPageQueryUser(ctx context.Context, req *UnitPageQueryUserReq) (res *UnitPageQueryUserResp, err error)
	UnitPageQueryView(ctx context.Context, req *UnitPageQueryViewReq) (res *UnitPageQueryViewResp, err error)
	UnitGetAppInfo(ctx context.Context, req *UnitGetAppInfoReq) (res *UnitGetAppInfoResp, err error)
	UnitModelGetInfo(ctx context.Context, req *UnitModelGetInfoReq) (res *UnitModelGetInfoResp, err error)
	UnitModelUpdateInfo(ctx context.Context, req *UnitModelUpdateInfoReq) (res *basic.Response, err error)
}
