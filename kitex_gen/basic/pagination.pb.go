// Code generated by Kitex v0.14.0. DO NOT EDIT.

package basic

import "github.com/cloudwego/prutal"

type PaginationOptions struct {
	Page      *int64  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Limit     *int64  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	LastToken *string `protobuf:"bytes,3,opt,name=lastToken" json:"lastToken,omitempty"`
	Backward  *bool   `protobuf:"varint,4,opt,name=backward" json:"backward,omitempty"`
	Offset    *int64  `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
}

func (x *PaginationOptions) Reset() { *x = PaginationOptions{} }

func (x *PaginationOptions) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *PaginationOptions) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *PaginationOptions) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *PaginationOptions) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *PaginationOptions) GetLastToken() string {
	if x != nil && x.LastToken != nil {
		return *x.LastToken
	}
	return ""
}

func (x *PaginationOptions) GetBackward() bool {
	if x != nil && x.Backward != nil {
		return *x.Backward
	}
	return false
}

func (x *PaginationOptions) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}
